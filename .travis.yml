jobs:
  include:
  - stage: main
    language: java
    jdk: oraclejdk8
    install: true
    before_script:
    - export MAJOR_VERSION=`sed -n 's/^ext\.majorVersion = \(.*\)$/\1/p' build.gradle`
    - export MINOR_VERSION=`sed -n 's/^ext\.minorVersion = \(.*\)$/\1/p' build.gradle`
    - export MC_VERSION=`sed -n 's/^ext\.minecraftVersion = "\(.*\)"$/\1/p' build.gradle`
    - export VERSION_STRING=$MAJOR_VERSION.$MINOR_VERSION.$TRAVIS_BUILD_NUMBER-mc$MC_VERSION
    - git config --global user.email "builds@travis-ci.com"
    - git config --global user.name "Travis CI"
    - 'sed -i "s/^\(version: \).*\$/\1$VERSION_STRING/g" src/main/resources/plugin.yml'
    script: ./gradlew build
    after_success:
    - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then exit 0; fi
    - if [ "$TRAVIS_BRANCH" != "$MC_VERSION" ]; then exit 0; fi
    - if [ "$TRAVIS_EVENT_TYPE" == "cron" ]; then exit 0; fi
    - ./gradlew shadowJar
    - cp build/libs/LangUtils.jar ./LangUtils-v$VERSION_STRING.jar
    - export GIT_TAG=v$VERSION_STRING
    - git tag $GIT_TAG -a -m "Generated tag from TravisCI for build $TRAVIS_BUILD_NUMBER"
    - |
      if [ $PUBLISH_MAVEN ]; then
        ./gradlew publish;
        pushd ..;
        git clone -b maven-repo $MAVEN_REPO_URL langutils-mvn;
        cp -r LanguageUtils/build/repo/cat langutils-mvn/;
        cd langutils-mvn;
        git config credential.helper "store --file=.git/credentials";
        echo "https://$GITHUB_OAUTH_TOKEN:@github.com" > .git/credentials;
        git add .;
        git commit -m "auto generated maven repo";
        git push --follow-tags;
        popd;
      fi
    deploy:
      skip_cleanup: true
      provider: releases
      prerelease: true
      api_key: $GITHUB_OAUTH_TOKEN
      file: ./LangUtils-v$VERSION_STRING.jar
      on:
        tags: false
        all_branches: true

  - stage: javadoc
    language: java
    jdk: oraclejdk10
    install: true
    before_script:
    - if [ "$TRAVIS_EVENT_TYPE" == "cron" ]; then exit 0; fi
    - export MAJOR_VERSION=`sed -n 's/^ext\.majorVersion = \(.*\)$/\1/p' build.gradle`
    - export MINOR_VERSION=`sed -n 's/^ext\.minorVersion = \(.*\)$/\1/p' build.gradle`
    - export MC_VERSION=`sed -n 's/^ext\.minecraftVersion = "\(.*\)"$/\1/p' build.gradle`
    - export VERSION_STRING=$MAJOR_VERSION.$MINOR_VERSION-mc$MC_VERSION
    - export FULL_VERSION_STRING=$MAJOR_VERSION.$MINOR_VERSION.$TRAVIS_BUILD_NUMBER-mc$MC_VERSION
    script:
    - |
      if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then exit 0; fi
      if [ "$TRAVIS_BRANCH" != "$MC_VERSION" ]; then exit 0; fi
      if [ $PUBLISH_JAVADOC ]; then
        ./gradlew javadoc;
        pushd ..;
        git clone -b gh-pages $MAVEN_REPO_URL pages;
        rm -rf pages/LangUtils/$VERSION_STRING/;
        mkdir -p pages/LangUtils/$VERSION_STRING/;
        cp -r LanguageUtils/build/docs/javadoc pages/LangUtils/$VERSION_STRING/;
        cd pages;
        git config credential.helper "store --file=.git/credentials";
        echo "https://$GITHUB_OAUTH_TOKEN:@github.com" > .git/credentials;
        git add .;
        git commit -m "auto generated javadoc";
        git push --follow-tags;
        popd;
      fi

branches:
  except:
  - "/^*-v[0-9]/"
  - "/^*-mc/"
  - "maven-repo"
  - "maven-repo-dev"
before_cache:
- rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
- rm -f  $HOME/.gradle/caches/*/fileHashes/fileHashes.bin
- rm -f  $HOME/.gradle/caches/*/fileHashes/fileHashes.lock
- rm -f  $HOME/.gradle/caches/transforms-1/transforms-1.lock
- rm -fr $HOME/.gradle/caches/*/plugin-resolution/
- rm -f  $HOME/.gradle/caches/*/fileContent/fileContent.lock
cache:
  directories:
  - $HOME/.gradle/caches/
  - $HOME/.gradle/wrapper/
  - $HOME/cache/